{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","prevProps","name","props","console","log","clearInterval","className","toLocaleTimeString","Component","App","hasClock","clockName","getRandomName","document","addEventListener","value","Math","random","toString","slice","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAVP,gCAaE,SAAmBM,GACbA,EAAUC,OAASL,KAAKM,MAAMD,MAEhCE,QAAQC,IAAR,uBAA4BJ,EAAUC,KAAtC,eAAiDL,KAAKM,MAAMD,KAA5D,QAhBN,kCAoBE,WACEI,cAAcT,KAAKD,WArBvB,oBAwBE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKa,UAAU,QAAf,UACE,iCAASV,KAAKM,MAAMD,OACnB,YACAR,EAAKc,4BA/Bd,GAA2BC,aCDrBC,E,4MACJjB,MAAQ,CACNkB,UAAU,EACVC,UAAW,S,uDAGb,WAAqB,IAAD,OAClBf,KAAKgB,gBAELC,SAASC,iBAAiB,eAAe,WACvC,EAAKf,SAAS,CAAEW,UAAU,OAG5BG,SAASC,iBAAiB,SAAS,WACjC,EAAKf,SAAS,CAAEW,UAAU,OAG5Bb,OAAOC,aAAY,kBAAM,EAAKc,kBAAiB,Q,2BAGjD,WACE,IAAMG,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhDvB,KAAKG,SAAS,CAAEY,UAAU,SAAD,OAAWI,O,oBAGtC,WACE,MAAgCnB,KAAKJ,MAA7BkB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKL,UAAU,MAAf,UACE,6CACCI,GAAY,cAAC,EAAD,CAAOT,KAAMU,W,GAhChBH,aAsCHC,IC5CfW,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.5be7956d.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.name} to ${this.props.name} `);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div className=\"clock\">\n        <strong>{this.props.name}</strong>\n        {' time is '}\n        {date.toLocaleTimeString()}\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock/Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nclass App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock',\n  };\n\n  componentDidMount() {\n    this.getRandomName();\n\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    window.setInterval(() => this.getRandomName(), 3300);\n  }\n\n  getRandomName() {\n    const value = Math.random().toString().slice(2, 6);\n\n    this.setState({ clockName: `Clock-${value}` });\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}